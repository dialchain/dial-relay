# Builds Pull-requests to key branches
name: Pull request CI with maven and npm. Builds backend and frontend

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build project backend and run default test suite
        run: ./mvnw clean package
        env:
          MAVEN_OPTS: "-Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120" # Github-on-Azure tweaks - https://github.com/actions/virtual-environments/issues/1499

      #      - name: Configure AWS credentials
      #        uses: aws-actions/configure-aws-credentials@v1
      #        with:
      #          aws-access-key-id: ${{ secrets.AWS_DEV_ACCESS_KEY_ID }}
      #          aws-secret-access-key: ${{ secrets.AWS_DEV_SECRET_ACCESS_KEY }}
      #          aws-region: 'us-east-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker images to ECR registry
        id: build-image
        #env:
        #  IMAGE_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #  IMAGE_TAG: ${{ github.sha }}
        run: |
            docker build -t "public.ecr.aws/s6b0c4h3/dial-relay:latest" .
            docker push "public.ecr.aws/s6b0c4h3/dial-relay:latest"
            #echo "::set-output name=image-${PROJECTS[$i]}::$image"